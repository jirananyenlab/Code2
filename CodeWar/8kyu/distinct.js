//  [1,1,2,3,4,5] -> [1,2,3,4,5]
const distinct = a => a.filter((item, index) => a.indexOf(item) === index);

function distinct(a) { 
    return [...new Set(a)]; 
    /*
    การเขียน [...new Set(a)] คือการใช้ JavaScript syntax ที่เรียกว่า "Spread Operator" (...) ร่วมกับการสร้าง Set ใหม่จากอาเรย์ a โดยใช้ new Set(a) เพื่อลบสมาชิกที่ซ้ำกันออกจากอาเรย์ 
    และจากนั้นใช้ Spread Operator ... เพื่อแปลง Set กลับเป็นอาเรย์ที่มีสมาชิกที่ไม่ซ้ำกัน
    การใช้ Spread Operator ... กับอาเรย์หมายความว่าเราจะ "กระจาย" (spread) สมาชิกในอาเรย์ตั้งแต่ตำแหน่งแรกถึงตำแหน่งสุดท้าย จากนั้นจึงนำสมาชิกที่กระจายไว้ให้เป็นสมาชิกในอาเรย์ใหม่
  
    let a = [1, 2, 3];
    let b = [...a, 4, 5];
    console.log(b); // ผลลัพธ์: [1, 2, 3, 4, 5]
  
    ในตัวอย่างนี้ ...a คือการกระจายสมาชิกในอาเรย์ a และใส่เข้าไปในอาเรย์ใหม่ b ซึ่งผลลัพธ์ที่ได้คือ [1, 2, 3, 4, 5] โดยเพิ่ม 4 และ 5 เข้าไปต่อท้ายจากสมาชิกในอาเรย์ a
    ดังนั้น, การเขียน [...new Set(a)] เป็นการนำเอา Set ที่ถูกสร้างขึ้นใหม่จากอาเรย์ a แล้วกระจาย (spread) สมาชิกใน Set นั้นเข้าไปในอาเรย์ใหม่ ทำให้อาเรย์ใหม่นี้ไม่มีสมาชิกซ้ำกันครับ!
    */
  
  }
  
function distinct(arr) { 
    let res = []; 
    
    for(let i = 0; i < arr.length; i++){
      if(!res.includes(arr[i])){ // ถ้าไม่มีใน  res ให้เอาไปใส่ เพราะงั้นเลยไม่มีตัวที่ซ้ำ
        res.push(arr[i]);
      }
  }
  return res;
  }
  console.log(distinct([1,1,2,3,4,5]));